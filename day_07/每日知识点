查看状态命令：

	windows：netstat -an | findstr 8001（端口号）

	Linux： netstat -apn | grep 8001


TCP 通信：
        面向连接，可靠的数据包传输。
UDP 通信：
        面向无连接，不可靠的报文传递。

UDP：服务器：
           1.创建server端地址结构（IP+Adder） net.ResolveUDPAddr()
           2.创建用于通信的socket,绑定地址结构 upconnn :=net.ListUDP("udp","server adder结构")
           3.defer upconn.close()
           4.读取客服端发送的数据： upconn.ReadFromUDP()返回 n cltadder(客户端+IP) err 三个参数
           5.写数据给客服端：upconn.WriteToUDP([]byte,cltadder)

UDP :客户端：
          参考TCP客户端：net.Dial("udp","ip+port")


UDP 服务器并发:
           1.UDP默认支持客服端并发访问
           2.使用GO程将服务器处理 ReadFromUDP 和WriteToUDP 操作分开，提高效率并发

TCP和UDP比较：
            TCP：优点：安全、稳定、有序。            UDP：优点：效率高、开销小、开发复杂度低
                 缺点：效率低、开销大、开发复杂度高。      缺点：安全低、稳定差、无序

使用场景：
        TCP：对数据传输安全性、稳定性要求较高的场合。网络文件传输，上传、下载
        UDP：对数据实时传输要求性较高的场合，视屏直播，电话会议，游戏...

